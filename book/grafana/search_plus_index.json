{"./":{"url":"./","title":"前言","keywords":"","body":"简介特点参考简介 Grafana是一个开源的通用数据可视化工具。可以做数据监控和数据统计以及告警。 特点 可视化 快速和灵活的客户端图形具有多种选项。面板插件以许多不同的方式可视化指标和日志。 告警 可以配置报警规则；grafana能够根据规则发送通知 通知 警告更改状态时，会发出通知（邮件） 动态仪表盘 使用模板变量创建动态和可重用的仪表板 混合数据源 在一个图形中可以混合不同的数据源，可以根据每个查询指定数据源 注释 给不同的数据源图表注释。将鼠标悬停在事件上可以显示完整的事件元数据和标记 过滤器 允许动态创建新的建/值过滤器，这些过滤器将自动应用于使用数据源的所有查询 参考 部署参考 Grafana官方文档 Prometheus + Grafana实现可视化、告警 监控与报警 编译安装Grafana Copyright © 2020-2021 ChangDingFang all right reserved，powered by Gitbook最近一次修订时间: 2021-08-25 18:31:45 "},"docs/install/install.html":{"url":"docs/install/install.html","title":"部署Grafana","keywords":"","body":"部署Grafanadocker部署Ubuntu部署源码使用源码制作镜像源码编译部署Grafana docker部署 拉取官方的grafana镜像 docker pull grafana/grafana 运行容器 默认情况下grafana使用的是3000端口, 宿主机可以任意指定端口. docker run -d -p 3000:3000 --name grafana grafana/grafana:latest Ubuntu部署 无 源码使用 源码仓库 https://github.com/grafana/grafana 使用源码的方式主要用于二次开发，可能需要修改部分代码或配置，再重新编译生成目标文件或制作镜像 源码制作镜像 制作镜像的过程中需要下载很多数据，默认大多都是国外的地址，下载会比较慢，甚至会失败，所以有必要更换一下源，提升制作镜像的成功率。 制作镜像 docker build -f /path/to/Dockerfile grafana: . 源码编译 环境准备 go 下载地址 https://golang.google.cn/dl/ go安装示例 选择go1.16.4的linux amd64版本安装 # 下载二进制包 wget https://dl.google.com/go/go1.16.4.linux-amd64.tar.gz # 解压 tar -zxpf go1.16.4.linux-amd64.tar.gz # 安装 mv go ~/.go # 修改环境变量, 在 ~/.bashrc 中最下面一行添加 export PATH=/home/dingfang/.go/bin:${PATH} # 使环境变量生效 source ~/.bashrc nodejs nodejs安装参考下面方法(nodejs需要14版本及其以上) nodejs安装 git git环境 构建后端 # 更改代理源 go env -w GOPROXY=\"https://goproxy.cn\" # 编译构建 go run build.go setup go run build.go build 编译好的可执行程序在 bin/ 下, 不同的平台,子路径不一样 构建前端 npm install -g yarn # 网络不太好的话, 这里可能会失败, 可以多尝试几次 yarn install --pure-lockfile npm run build 构建好的代码在 public/build 运行Grafana 编译好的 # 我这里安装的是linux-amd64的,所以是这个目录 cd ./bin/linux-amd64/ # 运行时指定homepath, 用于找conf和public ./grafana-server -homepath ../.. Copyright © 2020-2021 ChangDingFang all right reserved，powered by Gitbook最近一次修订时间: 2021-08-25 18:31:45 "},"docs/grafana/permissions.html":{"url":"docs/grafana/permissions.html","title":"Grafana权限控制","keywords":"","body":"权限Dashboraddashborad viewerdashboard editordashboard adminFolderfolder viewerfolder editorfolder adminOrgOrg viewerOrg editorOrg adminGrafana Admin权限 Grafana的权限控制非常的灵活，可以通过任意组合达到想要的用户隔离效果。 Dashborad dashborad viewer 该权限仅可以对dashboard查看 dashboard editor 对dashboard拥有编辑权限，可以对dashboard进行编辑修改。 增加、删除和修改panel 修改dashboard属性(名字、描述、tag等等) 可以删除dashboard ... ... dashboard admin 除了拥有dashboard editor的所有功能外，还可以管理dashboard的权限，可以对其它用户进行权限设置。 Folder 默认情况下，文件夹下的dashboard会继承文件夹对权限。也就是说如果一个用户对folder有edit权限，那么就拥有该文件夹下的大盘的edit权限 folder viewer 文件夹对拥有该权限的用户或team可见 folder editor 对文件夹可编辑 重命名 文件夹内创建dashboard 删除文件夹 folder admin 可以控制文件夹对权限 Org Org viewer 属于一个org的最基础的权限，也是最起码拥有该权限，才能登录(切换)到该org Org editor 可以配置alerting和explore功能， Org admin 可以对org进行设置，一个org的最高权限 数据源 用户 team 插件 ... ... Grafana Admin Grafana 的最高权限用户，相当于一个全局最高权限用户 用户的新增和删除 org的新增和删除 对grafana配置 ... ... Copyright © 2020-2021 ChangDingFang all right reserved，powered by Gitbook最近一次修订时间: 2021-08-25 18:31:45 "},"docs/grafana/gs.html":{"url":"docs/grafana/gs.html","title":"Grafana操作","keywords":"","body":"入门数据源(Data Source)添加数据源示例仪表板(Dashboard)添加仪表板示例面板(Panel)创建面板示例入门 数据源(Data Source) 数据源是为Grafana展示数据提供的数据仓库 Grafana支持的数据源 AWS CloudWatch Azure Monitor Elasticsearch Google Cloud Monitoring Graphite InfluxDB Loki Microsoft SQL Server (MSSQL) MySQL OpenTSDB PostgreSQL Prometheus Jaeger Zipkin Tempo Testdata 添加数据源示例 最后点击 (Save & Test) 即可添加成功 仪表板(Dashboard) 仪表板由一个或多个面板组合而成, 形成一个大的仪表板, 用于展示各种信息 仪表板里面的面板可以随意的拖动, 缩放和放大, 可操作性很高. 拖动示例 添加仪表板示例 可以添加一个空的面板, 也可以添加一个行(用于管理一小组面板), 当粘贴板上有复制的面板时, 还会有一个粘贴面板选项. 面板(Panel) 面板是仪表板里面的一个个小组件, 用于展示一个或多个信息. 创建面板示例 Copyright © 2020-2021 ChangDingFang all right reserved，powered by Gitbook最近一次修订时间: 2021-08-25 18:31:45 "},"docs/other/other.html":{"url":"docs/other/other.html","title":"其他","keywords":"","body":"其他其他 更多的配置和详情可以参考官方的文档,官方的文档写的十分的详细而且很好用 Grafana也支持使用api操作Grafana 官方文档地址请在 前言 里面的参考查找 Copyright © 2020-2021 ChangDingFang all right reserved，powered by Gitbook最近一次修订时间: 2021-08-25 18:31:45 "}}